import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { cookies, headers } from "next/headers";
import Head from "next/head";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Theme = 'light' | 'dark' | '';

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headerList = headers();
  const cookieStore = cookies();

  const prefersColorScheme = headerList.get('sec-ch-prefers-color-scheme');
  const themeCookie = cookieStore.get('theme')?.value;

  const theme  = themeCookie || prefersColorScheme || '' as Theme;

  // const headerList = headers();
  // const prefersColorScheme = headerList.get('sec-ch-prefers-color-scheme');

  // const [darkMode, setDarkMode] = useState(theme === 'dark');

  // useEffect(() => {
  //   // Add listener to update styles
  //   // window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => onSelectMode(e.matches ? 'dark' : 'light'));
  //
  //   // Setup dark/light mode for the first time
  //   console.log(window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  //
  //   setDarkMode(window.matchMedia('(prefers-color-scheme: dark)').matches);
  //
  //   // Remove listener
  //   return () => {
  //     window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', () => {
  //     });
  //   }
  // }, [])

  return (
    <html lang="en">
    <Head>
      <link rel="shortcut icon" href="/favicon.ico"/>
    </Head>
    <head>
      <title></title>
    </head>
    {/*suppressHydrationWarning*/}
    <body className={`${inter.className} ${theme}`}>
        {children}
        </body>
    </html>
  );
}

// export async function getServerSideProps({ req }) {
//   // Default to light mode
//   let theme = 'light';
//
//   // Check for the `Sec-CH-Prefers-Color-Scheme` header (User-Agent Client Hints)
//   const prefersColorScheme = req.headers['sec-ch-prefers-color-scheme'];
//
//   if (prefersColorScheme) {
//     theme = prefersColorScheme;
//   } else {
//     // Fallback to checking user-agent or other methods if necessary
//   }
//
//   return {
//     props: {
//       theme,
//     },
//   };
// }
